# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Reusable Build and Deploy

on:
  workflow_call:
    inputs:
      # The environment to deploy to (Staging or Production)
      githubEnvironment:
        required: true
        type: string
      deployEnvironment:
        required: true
        type: string
        
      # The name of the front and backend resources in Azure respectively
      # TODO: These needs to be replaced when outputs are persisted from the Bicep deployment
      AzureStaticWebAppName:
        required: true
        type: string      
      AzureWebAppName:
        required: true
        type: string
        
      AppName:
        required: true
        type: string
        
      hostingPlanName:
        required: true
        type: string
      hostingPlanRgName:
        required: true
        type: string
        
    secrets:
      AZURE_CREDENTIALS:
        required: true
      AZURE_SUBSCRIPTION:
        required: true
      AZURE_RG:
        required: true
      CLIENT_ID:
        required: true
        
      ConnectionString:
        required: true
      OpenAiApiKey:
        required: true
      
      GithubRepoToken:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.githubEnvironment }}
    
    steps:
      - uses: actions/checkout@v3.3.0

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Run Bicep
      - name: Deploy Bicep
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./.github/bicep/main.bicep
          parameters: 'appName=${{ inputs.appName }} hostingPlanName=${{ inputs.hostingPlanName }} hostingPlanRgName=${{ inputs.hostingRgPlanName }} environment=${{ inputs.deployEnvironment }} hostingPlanName=${{ inputs.hostingPlanName }} hostingPlanRgName=${{ inputs.hostingPlanRgName }} objectId=${{ secrets.CLIENT_ID }} connectionString=${{ secrets.ConnectionString }} openAiApiKey=${{ secrets.OpenAiApiKey }} allowedCors=${{ vars.ALLOWED_CORS }} maxRequests=${{ vars.MAX_REQUESTS }} signingAuthority=${{ vars.SIGNING_AUTHORITY }}'
          failOnStdErr: false

      # TODO: Persist Bicep outputs to GH step outputs
      
      # https://stackoverflow.com/questions/60521929/change-variables-in-appsettings-when-deploying-with-github-actions
      # This will fail if done before the build step
      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: './src/WebUI/wwwroot/appsettings.json'
        env:
          ApiBaseUrl: ${{ vars.API_BASE_URL }}
          SigningAuthority: ${{ vars.SIGNING_AUTHORITY }}

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3.0.3
        with:
          global-json-file: global.json

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish WebAPI
        run: dotnet publish ./src/WebAPI -c Release --no-build --no-restore -o ./publish/api

      - name: dotnet publish WebUI
        run: dotnet publish ./src/WebUI -c Release --no-build --no-restore -o ./publish/ui

      - name: Upload API artifact for deployment job
        uses: actions/upload-artifact@v3.1.2
        with:
          name: .net-app-api
          path: ./publish/api

      - name: Upload WebUI artifact for deployment job
        uses: actions/upload-artifact@v3.1.2
        with:
          name: .net-app-webui
          path: ./publish/ui

  deploy-api:
    runs-on: ubuntu-latest
    needs: build
    
    environment:
      name: ${{ inputs.githubEnvironment }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3.0.2
        with:
          name: .net-app-api

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ inputs.AzureWebAppName }}"
          package: .

  deploy-webui:
    runs-on: ubuntu-latest
    needs: build
    
    environment:
      name: ${{ inputs.githubEnvironment }}
      url: ${{ steps.deploy-to-staticwebapp.outputs.static_web_app_url }}
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3.0.2
        with:
          name: .net-app-webui
  
      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # TODO: Move to federated auth
          
      - name: Mask Deployment Token
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            echo "::add-mask::$(az staticwebapp secrets list -n ${{ inputs.AzureStaticWebAppName }} | jq -r '.properties.apiKey')"  

      - name: Retrieve Deployment Token
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            echo "SWA_TOKEN=$(az staticwebapp secrets list -n ${{ inputs.AzureStaticWebAppName }} | jq -r '.properties.apiKey')" >> $GITHUB_ENV            

      - name: Deploy Static Web App
        id: deploy-to-staticwebapp
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.SWA_TOKEN }}
          repo_token: ${{ secrets.GithubRepoToken }} # Used for Github integrations (i.e. PR comments)
          skip_app_build: true
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "./wwwroot" # App source code path
          config_file_location: "./"
          #api_location: '' # Api source code path - optional
          #output_location: '' # Built app content directory - optional
          ###### End of Repository/Build Configurations ######