@using Markdig
@inject MarkdigPipelineService MarkdigPipelineService

<style>
    .markdown-body p:last-child,
    .markdown-body ol:last-child,
    .markdown-body ol:last-child {
        margin-bottom: 0 !important;
    }
        
    .mud-typography .markdown-body {
        white-space: pre-line;
    }

    .markdown-body {
        overflow-y: auto;
    }
        
    .markdown-body a {
        color: #CC4141 !important;
    }

    .markdown-body table {
        border-spacing: 0px;
        border-collapse: collapse;
    }

    .markdown-body th {
        display: table-cell;
        border-width: 1px;
        padding: 8px;
    }

    .markdown-body td {
        display: table-cell;
        border-width: 1px;
        padding: 8px;
    }

    .markdown-body li {
        display: list-item;
    }

    .markdown-body ul {
        white-space: normal;
        padding-left: 2em !important;
        list-style: disc !important;
    }

    .markdown-body ol {
        padding-left: 2em !important;
        white-space: normal;
    }

    .markdown-body code {
        white-space: pre-line
    }
</style>

<div class="markdown-body">
    @_htmlContent
</div>


@code {

    private MarkupString _htmlContent;

    [Parameter]
    public string Content { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        var trimmedMarkdown = Markdig.Markdown.ToHtml(Content, MarkdigPipelineService.Pipeline).TrimEnd(Environment.NewLine.ToCharArray());
        _htmlContent = (MarkupString)trimmedMarkdown;
    }
}
